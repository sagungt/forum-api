name: Continuous Integration

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ secrets.PGDATABASE_TEST }}
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD_TEST }}
          POSTGRES_USER: ${{ secrets.PGUSER_TEST }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: create .env file 
        run: |
          touch .env
          echo PGHOST=${{ secrets.PGHOST_TEST }} >> .env
          echo PGUSER=${{ secrets.PGUSER_TEST }} >> .env
          echo PGDATABASE=${{ secrets.PGDATABASE_TEST }} >> .env
          echo PGPASSWORD=${{ secrets.PGPASSWORD_TEST }} >> .env
          echo PGPORT=${{ secrets.PGPORT_TEST }} >> .env
          echo PGHOST_TEST=${{ secrets.PGHOST_TEST }} >> .env
          echo PGUSER_TEST=${{ secrets.PGUSER_TEST }} >> .env
          echo PGDATABASE_TEST=${{ secrets.PGDATABASE_TEST }} >> .env
          echo PGPASSWORD_TEST=${{ secrets.PGPASSWORD_TEST }} >> .env
          echo PGPORT_TEST=${{ secrets.PGPORT_TEST }} >> .env
          echo ACCESS_TOKEN_KEY=${{ secrets.ACCESS_TOKEN_KEY }} >> .env
          echo REFRESH_TOKEN_KEY=${{ secrets.REFRESH_TOKEN_KEY }} >> .env
          echo ACCESS_TOKEN_AGE=${{ secrets.ACCESS_TOKEN_AGE }} >> .env
          cat .env
      - name: Install, Migrate and Test
        run: |
          npm install
          npm run migrate up
          npm run test
